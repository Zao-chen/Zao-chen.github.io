<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>ElaWidgetTools的基础使用</title>
    <link href="/2024/10/23/ElaWidgetTools%E7%9A%84%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <url>/2024/10/23/ElaWidgetTools%E7%9A%84%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>介绍一下ElaWidgetTools的基础使用方法</p><h1 id="ElaWidgetTools介绍"><a href="#ElaWidgetTools介绍" class="headerlink" title="ElaWidgetTools介绍"></a>ElaWidgetTools介绍</h1><p>基于QT-Widget开发的FluentUI风格的组件库，同时提供不限于组件的常用集成功能；目前Main分支支持QT5.12以上所有版本(Linux为QT5.15以上)，推荐版本为QT6.4.3和QT6.6.2；</p><h1 id="在项目中使用"><a href="#在项目中使用" class="headerlink" title="在项目中使用"></a>在项目中使用</h1><h2 id="构建dll"><a href="#构建dll" class="headerlink" title="构建dll"></a>构建dll</h2><p><a href="https://github.com/Liniyous/ElaWidgetTools">ElaWidgetTools</a></p><p>Clone下来并使用QtCreater打开，项目是CMaker，所以说打开的是CMakeLists.txt</p><p><img src="/1.png" alt="1.png"></p><p>选择和你项目一致的版本，使用release构建</p><p>在根目录下即可得到elawidgettools.dll和elawidgettools.lib</p><h2 id="添加到自己项目"><a href="#添加到自己项目" class="headerlink" title="添加到自己项目"></a>添加到自己项目</h2><p>在项目文件夹中创建lib文件夹和include文件夹</p><p><img src="/2.png"></p><p>把elawidgettools.dll和elawidgettools.lib放到lib文件夹</p><p>把ElaWidgetTools-main\src\include中的文件放到include文件夹</p><p>接下来打开自己项目的cmakelists</p><p>首先要把include文件夹包含进来</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cmake"><span class="hljs-keyword">include_directories</span>(<br>    <span class="hljs-keyword">include</span><br>)<br></code></pre></td></tr></table></figure><p>然后再add_executable中添加qrc</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs actionscript"><span class="hljs-meta"><span class="hljs-keyword">include</span>/ElaWidgetTools.qrc</span><br></code></pre></td></tr></table></figure><p>最后链接目标库，再target_link_libraries中添加</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-variable">$&#123;CMAKE_CURRENT_SOURCE_DIR&#125;</span><span class="hljs-regexp">/lib/</span>elawidgettools.lib<br></code></pre></td></tr></table></figure><p>大功告成，这是完整的cmakelist示例仅供参考：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">cmake_minimum_required</span><span class="hljs-params">(VERSION <span class="hljs-number">3.16</span>)</span></span><br><br><span class="hljs-function"><span class="hljs-title">project</span><span class="hljs-params">(Test VERSION <span class="hljs-number">0.1</span> LANGUAGES CXX)</span></span><br><br><span class="hljs-function"><span class="hljs-title">set</span><span class="hljs-params">(CMAKE_AUTOUIC ON)</span></span><br><span class="hljs-function"><span class="hljs-title">set</span><span class="hljs-params">(CMAKE_AUTOMOC ON)</span></span><br><span class="hljs-function"><span class="hljs-title">set</span><span class="hljs-params">(CMAKE_AUTORCC ON)</span></span><br><br><span class="hljs-function"><span class="hljs-title">set</span><span class="hljs-params">(CMAKE_CXX_STANDARD <span class="hljs-number">17</span>)</span></span><br><span class="hljs-function"><span class="hljs-title">set</span><span class="hljs-params">(CMAKE_CXX_STANDARD_REQUIRED ON)</span></span><br><br><span class="hljs-function"><span class="hljs-title">find_package</span><span class="hljs-params">(Qt6 REQUIRED Widgets Multimedia MultimediaWidgets NetWork)</span></span><br><br><span class="hljs-built_in">set</span>(PROJECT_SOURCES<br>        <span class="hljs-selector-tag">main</span><span class="hljs-selector-class">.cpp</span><br>        mainwindow<span class="hljs-selector-class">.cpp</span><br>        mainwindow<span class="hljs-selector-class">.h</span><br>        mainwindow<span class="hljs-selector-class">.ui</span><br>)<br><br><span class="hljs-built_in">add_executable</span>($&#123;PROJECT_NAME&#125; $&#123;PROJECT_SOURCES&#125;<br>    include/ElaWidgetTools<span class="hljs-selector-class">.qrc</span> #这里添加了<br>    res.qrc)<br>#这里添加了<br><br><span class="hljs-built_in">include_directories</span>(<br>    include<br>)<br><br><span class="hljs-built_in">target_link_libraries</span>($&#123;PROJECT_NAME&#125; PRIVATE Qt6::Widgets Qt6::Multimedia Qt6::MultimediaWidgets Qt6::Network<br>    $&#123;CMAKE_CURRENT_SOURCE_DIR&#125;/lib/elawidgettools.lib#这里添加了<br><br>)<br></code></pre></td></tr></table></figure><p>可以这样修改main.cpp来测试是否成功</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//#include &quot;mainwindow.h&quot;</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;QApplication&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;ElaApplication.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;ElaWindow.h&quot;</span></span><br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">char</span> *argv[])</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-function">QApplication <span class="hljs-title">a</span><span class="hljs-params">(argc, argv)</span></span>;<br>    ElaApplication::<span class="hljs-built_in">getInstance</span>()-&gt;<span class="hljs-built_in">init</span>();<br>    ElaWindow w;<br>    w.<span class="hljs-built_in">show</span>();<br>    <span class="hljs-keyword">return</span> a.<span class="hljs-built_in">exec</span>();<br>&#125;<br></code></pre></td></tr></table></figure><p>如果没问题的话应该会有这个界面<br><img src="/3.png" alt="3"></p><h2 id="在项目中使用-1"><a href="#在项目中使用-1" class="headerlink" title="在项目中使用"></a>在项目中使用</h2><h3 id="窗口修改"><a href="#窗口修改" class="headerlink" title="窗口修改"></a>窗口修改</h3><p>.h中在添加头文件的基础上把</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-keyword">class</span> <span class="hljs-symbol">MainWindow</span> : <span class="hljs-symbol">public</span> <span class="hljs-symbol">QMainWindow</span><br></code></pre></td></tr></table></figure><p>修改为</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-keyword">class</span> <span class="hljs-symbol">MainWindow</span> : <span class="hljs-symbol">public</span> <span class="hljs-symbol">ElaWidget</span> 或者 <span class="hljs-symbol">ElaWindow</span><br></code></pre></td></tr></table></figure><p>即可，widget和window看自己需求</p><p>当然cpp里也要修改为Ela</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title class_">MainWindow</span>::<span class="hljs-title class_">MainWindow</span>(<span class="hljs-title class_">QWidget</span> *parent)<br>    : <span class="hljs-title class_">ElaWindow</span>(parent) <span class="hljs-comment">//此处修改</span><br>    , <span class="hljs-title function_">ui</span>(<span class="hljs-params"><span class="hljs-keyword">new</span> Ui::MainWindow</span>)<br>&#123;<br>    ui-&gt;<span class="hljs-title function_">setupUi</span>(<span class="hljs-variable language_">this</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>之后需要在main.cpp中初始化</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;mainwindow.h&quot;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;QApplication&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;ElaApplication.h&quot;</span></span><br><br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">char</span> *argv[])</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-function">QApplication <span class="hljs-title">a</span><span class="hljs-params">(argc, argv)</span></span>;<br>    MainWindow w;<br>    w.<span class="hljs-built_in">show</span>();<br>    eApp-&gt;<span class="hljs-built_in">init</span>(); <span class="hljs-comment">//初始化</span><br>    <span class="hljs-keyword">return</span> a.<span class="hljs-built_in">exec</span>();<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="使用控件"><a href="#使用控件" class="headerlink" title="使用控件"></a>使用控件</h3><p>控件的使用除了在cpp里创建外，部分控件还可以用界面设计中的“提升为”功能</p><p><img src="/4.png" alt="4"></p>]]></content>
    
    
    
    <tags>
      
      <tag>Qt</tag>
      
      <tag>C++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何创建一个这样的博客</title>
    <link href="/2024/10/22/%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E8%BF%99%E6%A0%B7%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    <url>/2024/10/22/%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E8%BF%99%E6%A0%B7%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<p>介绍一下这个博客是如何创建出来的</p><span id="more"></span><h1 id="如何创建"><a href="#如何创建" class="headerlink" title="如何创建"></a>如何创建</h1><p>参考的是这样的一篇博客<br><a href="https://blog.csdn.net/yaorongke/article/details/119089190">创建教程</a></p><h1 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h1><p><a href="https://hexo.fluid-dev.com/docs/">Fluid文档</a></p><h1 id="一些快速配置"><a href="#一些快速配置" class="headerlink" title="一些快速配置"></a>一些快速配置</h1><h2 id="添加文章"><a href="#添加文章" class="headerlink" title="添加文章"></a>添加文章</h2><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">hexo <span class="hljs-keyword">new</span> 文章文件名<br></code></pre></td></tr></table></figure><h2 id="post和更新"><a href="#post和更新" class="headerlink" title="post和更新"></a>post和更新</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">hexo <span class="hljs-selector-tag">g</span> -d<br></code></pre></td></tr></table></figure><h1 id="一些问题"><a href="#一些问题" class="headerlink" title="一些问题"></a>一些问题</h1><h2 id="配置文件不更新"><a href="#配置文件不更新" class="headerlink" title="配置文件不更新"></a>配置文件不更新</h2><p>有的时候会遇到配置文件更新了不显示，这里就需要使用命令</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css">hexo <span class="hljs-selector-tag">g</span><br>hexo d<br></code></pre></td></tr></table></figure><p>来重新部署</p><h2 id="push的适合报fatal-unable-to-access"><a href="#push的适合报fatal-unable-to-access" class="headerlink" title="push的适合报fatal: unable to access"></a>push的适合报fatal: unable to access</h2><p>经典的github走错代理，使用命令来指定端口</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">git config <span class="hljs-attr">--global</span> https<span class="hljs-selector-class">.proxy</span> http:<span class="hljs-comment">//127.0.0.1:7897</span><br>git config <span class="hljs-attr">--global</span> http<span class="hljs-selector-class">.proxy</span> http:<span class="hljs-comment">//127.0.0.1:7897</span><br></code></pre></td></tr></table></figure><h2 id="关于网站样式的修改"><a href="#关于网站样式的修改" class="headerlink" title="关于网站样式的修改"></a>关于网站样式的修改</h2><p>样式修改需要手动删除目录下的public后再进行push</p>]]></content>
    
    
    
    <tags>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
